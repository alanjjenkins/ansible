---
- hosts: desktops
  remote_user: root
  tasks:
  - user:
      name: aur_builder
      group: wheel
  - lineinfile:
      path: /etc/sudoers.d/11-install-aur_builder
      line: 'aur_builder ALL=(ALL) NOPASSWD: /usr/bin/pacman'
      create: yes
      validate: 'visudo -cf %s'
  - name: Arch tweaks
    block:
      - name: configure parallel package compression
        lineinfile:
          path: /etc/makepkg.conf
          state: present
          line: 'COMPRESSXZ=(xz -c -z - --threads=0)'
          regexp: '^COMPRESSXZ='
      - name: set C compiler flags
        lineinfile:
          path: /etc/makepkg.conf
          state: present
          line: 'CFLAGS="-march=native -O2 -pipe -fstack-protector-strong"'
          regexp: '^CFLAGS='
      - name: set C++ compiler flags
        lineinfile:
          path: /etc/makepkg.conf
          state: present
          line: 'CXXFLAGS="${CFLAGS}"'
          regexp: '^CXXFLAGS='
      - name: set makepkg options
        lineinfile:
          path: /etc/makepkg.conf
          state: present
          line: 'OPTIONS=(strip docs !libtool !staticlibs emptydirs zipman purge !optipng !upx !debug)'
          regexp: '^OPTIONS='
      - name: set makepkg buildenv
        lineinfile:
          path: /etc/makepkg.conf
          state: present
          line: 'BUILDENV=(!distcc color ccache check !sign)'
          regexp: '^BUILDENV='
      - name: setup parallel make jobs
        lineinfile:
          path: /etc/makepkg.conf
          state: present
          line: 'MAKEFLAGS="-j8"'
          regexp: '^MAKEFLAGS='
      - name: ensure ccache is installed
        package:
          name: ccache
          state: present

  - name: ensure the 'yay' aur helper is installed
    aur:
      name: yay
      skip_installed: true
      use: makepkg
    become: yes
    become_user: aur_builder
  - name: make sure that vim is installed
    package:
      name: vim
      state: present

  - name: Install base system
    block:
      - name: Sudo cofiguration
        block:
          - name: keep ssh_auth_sock
            copy:
              dest: /etc/sudoers.d/keep_auth_sock
              src: ./files/sudoers/keep_auth_sock
              validate: 'visudo -cf %s'
      - name: Install base packages
        package:
          name: "{{ item }}"
          state: present
        with_items:
          - augeas
          - bash-completion
          - docker
          - git
          - gvim
          - htop
          - linux-headers
          - moreutils
          - ncdu
          - pkgfile
          - python-pip
          - python2-pip
          - ranger
          - rsync
          - tmux
      - name: Generate initial pkgfile db
        command: /usr/bin/pkgfile -u
        args:
          creates: /var/cache/pkgfile/core.files
      - name: Create systemd-timer for updating pkfile db once per day
        block:
          - name: Create pkgfile update cron timer
            copy:
              dest: /etc/systemd/system/pkgfile_update_cron.timer
              content: |
                [Unit]
                Description=Update pkgfile db daily at 1500

                [Timer]
                OnCalendar=*:15
                Persistent=true

                [Install]
                WantedBy=timers.target
          - name: Create pkgfile update cron service
            copy:
              dest: /etc/systemd/system/pkgfile_update_cron.service
              content: |
                [Unit]
                Description=Update pkgfile daily at 1500

                [Timer]
                OnCalendar=*:15

                [Install]
                WantedBy=timers.target
      - name: Setup NTP
        block:
          - name: Set timezone
            command: timedatectl set-timezone Europe/London
            args:
              creates: /etc/localtime
            notify: reload systemd-timesyncd
          - name: NTP config
            lineinfile:
              path: /etc/systemd/timesyncd.conf
              state: present
              line: 'NTP=0.arch.pool.ntp.org 1.arch.pool.ntp.org 2.arch.pool.ntp.org 3.arch.pool.ntp.org'
              regexp: '^NTP='
            notify: reload systemd-timesyncd
          - name: NTP config fallback
            lineinfile:
              path: /etc/systemd/timesyncd.conf
              state: present
              line: 'FallbackNTP=0.pool.ntp.org 1.pool.ntp.org 0.fr.pool.ntp.org'
              regexp: '^FallbackNTP='
            notify: reload systemd-timesyncd
          - name: NTP initial sync
            shell: "if ! /usr/bin/timedatectl status | /usr/bin/grep 'NTP synchronized: yes'; then /usr/bin/timedatectl set-ntp true; fi"
  handlers:
    - name: reload systemd-timesyncd
      service:
        name: systemd-timesyncd
        state: restarted
