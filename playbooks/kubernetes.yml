---

- hosts: kubernetes
  tags: [ never, init ]
  remote_user: alarm
  gather_facts: no
  tasks:
    - name: Fully update system and install Python
      raw: echo "root" | su root -c "pacman -Syu python htop neovim --noconfirm"
      args:
        executable: /bin/sh

- hosts: kubernetes
  tags: [ never, init ]
  remote_user: alarm
  become: yes
  become_method: su
  tasks:
    - name: Ensure that sudo is installed
      package:
        name: sudo
        state: present
    - name: Ensure systemd-timesyncd is enabled
      service:
        name: systemd-timesyncd
        enabled: true
    - name: Setup passwordless sudo for my user
      lineinfile:
        path: /etc/sudoers.d/10-alan-nopasswd
        line: 'alan ALL=(ALL) NOPASSWD: ALL'
        create: yes
        validate: 'visudo -cf %s'
    - name: Add my user
      user:
        name: alan
        state: present
        append: yes
        groups:
          - audio
          - input
          - lp
          - optical
          - sys
          - video
          - wheel
    - name: Add SSH key to my user
      authorized_key:
        user: alan
        state: present
        key: "{{ lookup('file', '/home/alan/git/ssh_keys/id_personal.pub') }}"
    # - name: Get root PARTUUID
    #   shell: cat /proc/cmdline | sed 's/ /\n/g' | grep 'root='
    #   args:
    #     executable: /bin/bash
    #   changed_when: False
    #   ignore_errors: no
    #   register: rootuuid
    # - name: Configure kernel params for groups
    #   copy: content="console=serial0,115200 console=tty1 {{ rootuuid.stdout }} rootfstype=ext4 elevator=deadline fsck.repair=yes rootwait cgroup_enable=cpuset cgroup_memory=1 cgroup_enable=memory" dest=/boot/cmdline.txt
    - name: Kill all of alarm user's processes
      remote_user: alan
      become: yes
      become_method: sudo
      shell: pkill -u alarm
    - name: Remove alarm user
      remote_user: alan
      become: yes
      become_method: sudo
      user:
        name: alarm
        state: absent
        remove: yes
    - name: Set hostname
      remote_user: alan
      become: yes
      become_method: sudo
      hostname:
        name: "{{ inventory_hostname }}"
    - name: Populate /etc/hosts
      remote_user: alan
      become: yes
      become_method: sudo
      lineinfile:
        path: /etc/hosts
        line: "{{ ansible_facts['eth0']['ipv4']['address'] }}       {{ inventory_hostname }}"
    - name: Reboot
      become: yes
      become_method: sudo
      remote_user: alan
      reboot:
